سلام به همگی،
محمد صادق خوش نظر هستم.
با یک جلسه دیگه از آشنایی با ASP.NET در خدمت شمام.

«کجا بودیم؟»
همین اول بگم که دیگه خبری از اون شوخیا و مهربونیای جلسه اول نیست. اونا فقط برای جذب شما بود، دیگه تموم شد. صاف بشین آقا جان.
خخخخخ.
نه ولی جدا برید بشینید پای دستگاه و آماده شید برای همراهی کردن توی فعالیت هایی که میگم.
یه یادآوری کوتاه هم از جلسه قبل برای اونایی که ده بار از روی مطالب ننوشتن:
- هرچند میشه با ASP.NET طراحی وبسایت انجام داد، اما ما به نرم افزارهای کاربردی تحت وب فکر میکنیم
- نرم افزار ASP.NET روی سرور اجرا میشه و فقط به منابع سرور و اطلاعاتی که کاربر همراه درخواستش فرستاده دسترسی داره
- حاصل اجرای یک صفحه ASP.NET معمولا یک فایل html هست
- گفتیم ASP.NET یک زبان نیست، مجموعه ای از تکنولوژی هاست برای توسعه نرم افزارهای تحت وب که میشه از زبان های مختلفی توش استفاده کرد
- از ASP.NET میشه برای RAD استفاده کرد، و میشه برای روش های پسندیده تر و امروزی توسعه وب استفاده کرد

«خب، دیگه میریم سراغ کدنویسی؟»
امشب حتما به کدنویسی میرسیم، اما میخوام یکم دیگه اهمیت این مدل حرفا رو براتون روشن کنم.
حتما شنیدید میگن به طرف ماهی نده، ماهی گیری یاد بده. و حتما دیدید دانشجوهایی رو که خیلی هم درسا رو خوب میفهمن، اما وقتی میشینن پای دستگاه تا یه برنامه بنویسن نمیدونن باید چیکار کنن و از کجا شروع کنن. یکی از دلایل مهم این مساله، اینه که دانشجو مراحل انجام یک پروژه خاص رو طی کرده اما نتونسته توی ذهنش مفاهیم رو تیکه تیکه کنه. و وقتی آدم قطعات جدا از هم نداشته باشه نمیتونه خونه سازی کنه. توی دانش های کامپیوتری و هر جایی که باید مخترع باشید هم همینه. تا وقتی همه چیز رو انقدر تیکه تیکه نکنید و خوب نفهمیدشون که تبدیل به قطعات قابل استفاده برای خونه سازی بشن، هیچ چیز یاد نگرفتید و فقط مصرف کننده اید.
تشریح کردن هر پدیده ای باعث ایجاد روحیه خلاقیت میشه. اگر این حرفا رو جدی بگیرید و تلاش کنید کلمات رو مال خودتون کنید، فردا فقط ASP.NET بلد نیستید، یه آدم متفاوت هستید، یه آچار فرانسه که از قضا به ASP.NET هم وارده.

«ساده ترین صفحه ASP.NET چه شکلیه؟»
این شکلی:
```
<html>
<h1>Salam</h1>
</html>
```
و پسوند فایل باید حتما .aspx باشه.
اشتباه نکنید. این یه صفحه html ساده نیست. اگر این رو توی php مینوشتیم فرقی با html ساده نداشت. یعنی وقتی سرور درخواست این صفحه رو دریافت میکرد خط به خط اون رو به عنوان پاسخ ارائه میکرد و چون هیچ کد php برای اجرا شدن وجود نداشت، درست مثل html تحویل کاربر داده میشد.
اما توی ASP.NET این طور نیست. اولین باری که این صفحه رو درخواست میدید تمام این صفحه، تبدیل به یه کلاس سی شارپ میشه و کامپایل میشه. دفعات بعد هم اون کلاس کامپایل شده سی شارپه که اجرا میشه و این کد html رو به عنوان خروجی تحویل شما میده.
بله، یه کلاس کامل سی شارپ با پراپرتی ها و متدهای مختلف که یکیشون کد html ی که شما نوشتید رو به عنوان خروجی تحویل میده. یعنی ما نهایتا aspx هم نخواهیم داشت. همه چیز تبدیل به سی شارپ (یا زبان های دیگه دات نت) میشه.
شما میتونید مثل ASP کلاسیک با علامت کوچکتر و بزرگتر و علامت درصد، کدهای سی شارپتون رو قاطی کدهای html کنید. و باز هم مثل ASP کلاسیک میتونید از تگ اسکریپت با پراپرتی runat=server برای نوشتن کدهاتون استفاده کنید. اما برعکس ASP کلاسیک با این دو نوع کدنویسی برخورد بسیار متفاوتی میشه که بعدا بیشتر توضیح میدم.
یه سوءتفاهمی هست بچه ها و اون اینه که خیلیا فکر میکنن یه زبان برنامه نویسی همه ش سینتکسه. این بسیار اشتباهه. سینتکس فقط پوسته رویی هست، و هرچند اهمیت داره اما شاید کم اهمیت ترین بخشه. وقتی زیر کاپوت زبان ها رو نگاه کنید متوجه میشید چه تفاوت هایی با هم دارن.
سرتون رو با توضیح تفاوتای C و Java و JavaScript و غیره درد نمیارم اما این در مورد ASP.NET هم صادقه. در مقابل ASP کلاسیک و php که هیچ ایرادی نداره توشون کدهای سمت سرور رو با html میکس کنید WebForms کاملا با این کار مخالفه. ممکنه بگید ما بسیار متمدن هستیم و توی php هم همین کار رو انجام میدیم. اما مساله اینجاست که اگر زیر کاپوت php و زیر کاپوت ASP.NET رو ببینید، متوجه میشید که WebForms برای جدا بودن این کدها طراحی شده و توی php به لحاظ ساختاری ترجیحی وجود نداره. 
نکته توی کلاس سی شارپی هست که گفتیم خود سرور توی اولین اجرا تولید میکنه. اگر شما کدهای سرورساید رو با کدهای html قاطی کنید، تمام کد شما به ترکیبی از خروجی String ها و کدهای سی شارپ داخل یکی از متدهای اون فایل سی شارپ تبدیل میشه. در حالی که اگر از کنترل های ASP.NET و روشی که .NET از شما انتظار داره استفاده کنید، یه کلاس سی شارپ تمیز خواهید داشت که متدها و پراپرتی های مورد نیاز رو داره و انگار خط به خطش رو یه برنامه نویس خوش سلیقه نوشته.

«میشه به خاطر خدا شروع کنیم به نوشتن صفحات ASP.NET؟»
بله حتما :))

«راه اندازی IIS در ویندوز 10»
راه اندازی IIS از ویندوز 7 به بعد خیلی راحت شده. برای این کار باید از بخش Turn windows features on and off استفاده کنیم. اگر نمیدونید چطوری برید به این بخش این مراحل رو دنبال کنید.
- دکمه استارت رو بزنید و وقتی منوی استارت ظاهر شد شروع به تایپ کنید: programs
- باید default programs رو به عنوان پیشنهاد بهتون بده، روش کلیک کنید
- توی پنجره default programs لینک programs and features رو کلیک کنید (پایین سمت چپ)
- حالا لینک Turn windows features on and off رو از منوی سمت چپ انتخاب کنید تا بخش مورد نظر بیاد
اینجا میتونید خیلی از امکانات پیشرفته ویندوز رو فعال یا غیر فعال کنید. برای کار ما نیاز هست که دات نت فریم ورک 4.6 کاملا فعال باشه (مخصوصا چک کنید توی زیر مجموعه هاش ASP.NET فعال باشه). و برای فعال سازی سرور IIS باید بخش Internet Information Services رو فعال کنید. اگر دقیقا میدونید چیا رو نیاز دارید، همونا رو انتخاب کنید. اگر نمیدونید، میتونید به روش ایرانی عمل کنید و همه رو فعال کنید. اما اینها چیزایی هست که حتما باید فعال باشه:
از Web Management Tools
- IIS Management Console
- IIS Management Services
از زیرمجموعه های World Wide Web Services
- .NET Extensibility 4.6
- ASP.NET 4.6
- ISAPI Extensions
- ISAPI Filters
- Common HTTP Features
بخش Security رو هم میتونید فعال کنید. اگر بعدها کدی رو دقیقا مثل یه آموزش زدید و نتیجه مورد نظر رو نگرفتید، یکی از جاهایی که خوبه چک کنید، همین فعال بودن امکانات مورد نیاز توی IIS هست.
خب، حالا میتونید برید توی مرورگرتون و برای آدرس بنویسید localhost. باید IIS جواب شما رو بده.
این فایل html رو میتونید توی c:\inetpub\wwwroot پیدا کنید. اما مثل این نیست که توی مرورگر این آدرس رو درخواست بدید. الان دیگه کامپیوتر شما هم نقش سرور رو بازی میکنه هم نقش کلاینت رو. مرورگر به عنوان کلاینت به localhost (=127.0.0.1) درخواست میده و این IP که دستگاه خود شماست الان طوری تنظیم شده که درخواست های HTTP رو به IIS ارجاع بده. و نهایتا IIS به عنوان سرور جواب رو طبق تنظیماتش به مرورگر شما تحویل میده. این باعث میشه بتونید صفحات ASP.NET (یا زبان های دیگه طرف سرور) رو با کمک IIS اجرا کنید و نتیجه رو تحویل بگیرید. حتی میتونید از طریق بقیه دستگاهایی که روی یک شبکه هستن با کامپیوتر شما، به این سرور دسترسی داشته باشید. کافیه IP کامپیوترتون رو روی شبکه بدونید و به جای localhost توی مرورگر دستگاهای دیگه شبکه وارد کنید.

